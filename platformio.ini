; PlatformIO Project Configuration File
;
; Configuración para desarrollo y testing de PID_Control
; Para usuarios: no es necesario, usar Arduino Library Manager

[platformio]
default_envs = uno

; ========================================
; Entornos de Testing
; ========================================

[env:uno]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

[env:mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

[env:due]
platform = atmelsam
board = dueUSB
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

[env:esp8266]
platform = espressif8266
board = nodemcuv2
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

[env:teensy40]
platform = teensy
board = teensy40
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O3
    -march=armv7e-m

[env:stm32]
platform = ststm32
board = bluepill_f103c8
framework = arduino
monitor_speed = 115200
lib_deps = 
build_flags = 
    -O2

; ========================================
; Entornos de Optimización
; ========================================

[env:performance]
platform = atmelsam
board = dueUSB
framework = arduino
monitor_speed = 115200
build_flags = 
    -O3
    -ffast-math
    -funroll-loops
    -DNDEBUG

[env:size_optimized]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 115200
build_flags = 
    -Os
    -DNDEBUG

; ========================================
; Testing
; ========================================

[env:native]
platform = native
test_framework = unity
lib_deps = 
    ArduinoFake